#20.2.9 Exercises
# Jimmy Hattier, Diontre Davis, and Yvonne Ma
# 2/11/24

library(tidyverse)
library(readxl)
library(openxlsx)

# 1) In an Excel file, create the following dataset and save it as survey.xlsx.
# Alternatively, you can download it as an Excel file from
# https://docs.google.com/spreadsheets/d/1yc5gL-a2OOBr8M7B3IsDNX5uR17vBHOyWZq6xSTG2G8.
# Then, read it into R, with survey_id as a character variable and
# n_pets as a numerical variable.

setwd(dir = "/Users/eptic/OneDrive - Duke University/Spring 2024 Classes/R Exercises")

survey <- 
  read_excel("survey.xlsx",
             na = c("", "N/A"),
             col_types = c("text", "text")
             )

survey <- survey |> 
  mutate(n_pets = if_else(n_pets == "two", "2", n_pets),
         n_pets = parse_number(n_pets)
         )

# 2) In another Excel file, create the following dataset and save it as roster.xlsx.
# Alternatively, you can download it as an Excel file from
# https://docs.google.com/spreadsheets/d/1LgZ0Bkg9d_NK8uTdP2uHXm07kAlwx8-Ictf8NocebIE.
# Then, read it into R. The resulting data frame should be called roster and
# should look like the following.
#> # A tibble: 12 × 3
#>    group subgroup    id
#>    <dbl> <chr>    <dbl>
#>  1     1 A            1
#>  2     1 A            2
#>  3     1 A            3
#>  4     1 B            4
#>  5     1 B            5
#>  6     1 B            6
#>  7     1 B            7
#>  8     2 A            8
#>  9     2 A            9
#> 10     2 B           10
#> 11     2 B           11
#> 12     2 B           12

roster <-
  read_excel("roster.xlsx")

roster <- roster |> 
  fill(everything())

# 3) In a new Excel file, create the following dataset and save it as sales.xlsx.
# Alternatively, you can download it as an Excel file from
# https://docs.google.com/spreadsheets/d/1oCqdXUNO8JR3Pca8fHfiz_WXWxMuZAp3YiYFaKze5V0.
# a) Read sales.xlsx in and save as sales. The data frame should look like
# the following, with id and n as column names and with 9 rows.
#> # A tibble: 9 × 2
#>   id      n    
#>   <chr>   <chr>
#> 1 Brand 1 n    
#> 2 1234    8    
#> 3 8721    2    
#> 4 1822    3    
#> 5 Brand 2 n    
#> 6 3333    1    
#> 7 2156    3    
#> 8 3987    6    
#> 9 3216    5

sales <-
  read_excel("sales.xlsx",
           range = "A5:B13",
           col_names = c("id", "n"),
           )

# b) Modify sales further to get it into the following tidy format with
# three columns (brand, id, and n) and 7 rows of data.
# Note that id and n are numeric, brand is a character variable.
#> # A tibble: 7 × 3
#>   brand      id     n
#>   <chr>   <dbl> <dbl>
#> 1 Brand 1  1234     8
#> 2 Brand 1  8721     2
#> 3 Brand 1  1822     3
#> 4 Brand 2  3333     1
#> 5 Brand 2  2156     3
#> 6 Brand 2  3987     6
#> 7 Brand 2  3216     5

sales_modify <- 
  sales[-c(1, 5),]

sales_modify$brand <- c("Brand 1", "Brand 1", "Brand 1", "Brand 2", "Brand 2",
                        "Brand 2", "Brand 2")

sales_modify <-
  sales_modify |> 
  relocate(brand) |> 
  mutate(id = parse_number(id)) |>
  mutate(n = parse_number(n))

# 4) Recreate the bake_sale data frame, write it out to an Excel file using
# the write.xlsx() function from the openxlsx package.

bake_sale <-
  data.frame(item = c("brownie", "cupcake", "cookie"),
             quantity = c(10, 5, 8)
             )

write.xlsx(bake_sale, file = "bake_sale.xlsx")

# 5) In Chapter 7 you learned about the janitor::clean_names() function to turn
# column names into snake case. Read the students.xlsx file that we introduced
# earlier in this section and use this function to “clean” the column names.

library(janitor)

students <-
  read_excel("students.xlsx",
             na = c("", "N/A")
             )

students <-
  students |> 
  janitor::clean_names()

# 6) What happens if you try to read in a file with .xlsx extension
# with read_xls()?

read_xls("students.xlsx")

# I get an error "libxls error: Unable to open file" because it's the wrong
# extension.
